# Use root/example as user/password credentials
version: '3.1'

volumes:
  postgres_data:
  redis_data:

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: unless-stopped
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    environment:
      REDIS_PWD: 'my-redis'
    ports:
      - '6078:6379'
    # command: redis-server --save 20 1 --loglevel warning --requirepass $$REDIS_PWD
    volumes:
      - redis_data:/data
    
  postgresdb:
    container_name: postgresdb
    build:
        context: .
        dockerfile: ./docker/Dockerfile
    ports:
      - 5406:5432
    healthcheck:
      test: ["CMD-SHELL", "PGUSER=cavelms", "pg_isready"]
      interval: 1s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_USER: cavelms
      POSTGRES_PASSWORD: 1414{bruno}
      POSTGRES_DB: cavelms
    volumes: 
      - ./docker/extension/pgjwt.control:/usr/share/postgresql/15/extension/pgjwt.control
      - ./docker/extension/pgjwt--0.1.0--0.1.1.sql:/usr/share/postgresql/15/extension/pgjwt--0.1.0--0.1.1.sql
      - ./docker/extension/pgjwt--0.1.1.sql:/usr/share/postgresql/15/extension/pgjwt--0.1.1.sql
      - ./docker/extension/pgjwt--0.1.1--0.2.0.sql:/usr/share/postgresql/15/extension/pgjwt--0.1.1--0.2.0.sql
      - ./docker/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/pgdata:/var/lib/postgresql/data
 
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:v10.0.0
    restart: unless-stopped
    ports:
      - 3001:3000
    environment:
      PGRST_DB_URI: postgres://cavelms:1414{bruno}@postgresdb:5432/cavelms
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anonymous
      PGRST_JWT_SECRET: Q!6HLp@B5wD24Pbq*LNd!%S4&H%ly7bt
    depends_on:
      - postgresdb
    
  graphiql:
    container_name: pg_graphiql
    restart: unless-stopped
    image: nginx
    volumes:
      - ./docker/graphiql:/usr/share/nginx/html
    ports:
      - 4000:80
    depends_on:
      - postgrest
  
  swagger:
   container_name: swaggerUI
   restart: unless-stopped
   image: swaggerapi/swagger-ui
   ports:
    - "8899:8080"
   expose:
    - "8080"
   environment:
    API_URL: http://localhost:3001/  