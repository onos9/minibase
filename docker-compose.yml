# Use root/example as user/password credentials
version: '3.1'

volumes:
  pgdata:
  redis_data:

services:
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    environment:
      REDIS_PWD: 'my-redis'
    ports:
      - '6078:6379'
    # command: redis-server --save 20 1 --loglevel warning --requirepass $$REDIS_PWD
    volumes:
      - redis_data:/data
    
  minibase:
    container_name: minibase
    image: ghcr.io/onos9/onos9/minibase:latest
    restart: unless-stopped
    ports:
      - 5406:5432
    environment:
      POSTGRES_USER: cavelms
      POSTGRES_PASSWORD: 1414{bruno}
      POSTGRES_DB: cavelms
    volumes: 
      - pgdata:/var/lib/postgresql/data
 
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:v10.0.0
    restart: unless-stopped
    ports:
      - 3001:3000
    environment:
      PGRST_DB_URI: postgres://authenticator:1414{bruno}@postgresdb:5432/cavelms
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: anonymous
      PGRST_JWT_SECRET: Q!6HLp@B5wD24Pbq*LNd!%S4&H%ly7bt
      PGRST_DB_PRE_REQUEST: "auth.authenticate"
    depends_on:
      - postgresdb
    
  graphiql:
    container_name: graphiql
    restart: unless-stopped
    image: nginx
    volumes:
      - ./graphiql:/usr/share/nginx/html
    ports:
      - 4000:80
    depends_on:
      - postgrest
  
  swagger:
   container_name: swaggerUI
   restart: unless-stopped
   image: swaggerapi/swagger-ui
   ports:
    - "8899:8080"
   expose:
    - "8080"
   environment:
    API_URL: http://localhost:3001/  